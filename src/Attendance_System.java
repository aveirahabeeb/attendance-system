/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */




import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.Timer;
import org.joda.time.LocalDateTime;

/**
 *
 * @author user
 */
public class Attendance_System extends javax.swing.JFrame{

//String url = "jdbc:mysql://localhost/date";

     ResultSet rs=null ;
     Connection conn = null;
      Statement st = null;
              String g1 = null; 
                byte b[] = null;
                  String Name;
                    private Timer timer;
                       private boolean chromeShown;

    public Attendance_System() {
        initComponents();
        
        setLocationRelativeTo(null);
        ClockThread1 j = new ClockThread1();
        j.start();
         reason.setVisible(false);
        reason.setHorizontalAlignment(SwingConstants.CENTER);
            reason.setVerticalAlignment(SwingConstants.CENTER);
          getname.setHorizontalAlignment(SwingConstants.CENTER);
            getname.setVerticalAlignment(SwingConstants.CENTER);
        IDField.requestFocus(true);    
                ResetImage();
    }

     
     
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        getname = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        latereasoncombo = new javax.swing.JComboBox();
        Savereason_button = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        Resumebutton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        IDField = new javax.swing.JTextField();
        clocklabel = new javax.swing.JLabel();
        picturelabel = new javax.swing.JLabel();
        reason = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Area = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        OutArea = new javax.swing.JTextArea();

        jMenuItem1.setText("jMenuItem1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(">> <<");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setIconImages(null);
        setMinimumSize(new java.awt.Dimension(1280, 660));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText(" Attendance System");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(460, 0, 400, 50);

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        getname.setFont(new java.awt.Font("Tahoma", 0, 35)); // NOI18N
        getname.setForeground(new java.awt.Color(153, 153, 153));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Reason Box", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 2, 12))); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText(" Reason For Lateness");

        latereasoncombo.setEditable(true);
        latereasoncombo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        latereasoncombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Reason For Lateness....", "Traffic", "Illness", "Official Assignment", "Others", " " }));
        latereasoncombo.setEnabled(false);

        Savereason_button.setText("Save Reason");
        Savereason_button.setEnabled(false);
        Savereason_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Savereason_buttonMouseClicked(evt);
            }
        });
        Savereason_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Savereason_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(latereasoncombo, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Savereason_button)
                        .addGap(60, 60, 60))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(latereasoncombo))
                        .addGap(43, 43, 43))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Savereason_button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jButton1.setBackground(new java.awt.Color(204, 255, 255));
        jButton1.setText("Record");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 255, 255));
        jButton3.setText("Admin");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 259, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(getname, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(getname, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(420, 180, 420, 430);

        Resumebutton.setText("Re");
        Resumebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResumebuttonMouseClicked(evt);
            }
        });
        Resumebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResumebuttonActionPerformed(evt);
            }
        });
        getContentPane().add(Resumebutton);
        Resumebutton.setBounds(130, 340, 120, 39);

        jLabel4.setText("Enter Id");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 300, 58, 32);

        IDField.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                IDFieldInputMethodTextChanged(evt);
            }
        });
        IDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDFieldActionPerformed(evt);
            }
        });
        IDField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                IDFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                IDFieldKeyTyped(evt);
            }
        });
        getContentPane().add(IDField);
        IDField.setBounds(90, 290, 198, 42);

        clocklabel.setFont(new java.awt.Font("Times New Roman", 1, 26)); // NOI18N
        clocklabel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153)), "Date/Time", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 3, 12))); // NOI18N
        getContentPane().add(clocklabel);
        clocklabel.setBounds(10, 40, 350, 90);

        picturelabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/wImg0.jpg"))); // NOI18N
        picturelabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        getContentPane().add(picturelabel);
        picturelabel.setBounds(970, 19, 220, 220);

        reason.setFont(new java.awt.Font("Times New Roman", 0, 23)); // NOI18N
        reason.setForeground(new java.awt.Color(255, 51, 51));
        reason.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        getContentPane().add(reason);
        reason.setBounds(370, 60, 560, 50);

        Area.setEditable(false);
        Area.setColumns(20);
        Area.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Area.setLineWrap(true);
        Area.setRows(5);
        Area.setBorder(javax.swing.BorderFactory.createTitledBorder(" Checked In"));
        jScrollPane1.setViewportView(Area);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(890, 250, 190, 360);

        OutArea.setEditable(false);
        OutArea.setColumns(20);
        OutArea.setForeground(new java.awt.Color(255, 0, 0));
        OutArea.setLineWrap(true);
        OutArea.setRows(5);
        OutArea.setBorder(javax.swing.BorderFactory.createTitledBorder("Checked Out"));
        jScrollPane2.setViewportView(OutArea);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(1080, 250, 170, 360);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void ResumebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResumebuttonActionPerformed

         
    }//GEN-LAST:event_ResumebuttonActionPerformed

    private void ResumebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResumebuttonMouseClicked
        
    try {
            Class.forName("org.sqlite.JDBC");
                   conn = SqlConnect2.AttconDB();
                   
        Calendar c = Calendar.getInstance();
        c.set(Calendar.HOUR_OF_DAY, 20);
        c.set(Calendar.MINUTE, 00);
        c.set(Calendar.AM_PM , 0);
        boolean Past = Calendar.getInstance().after(c);
        boolean before = Calendar.getInstance().before(c);

        Calendar cal= Calendar.getInstance();
        cal.set(Calendar.HOUR_OF_DAY, 17);
        cal.set(Calendar.MINUTE, 00);
        cal.set(Calendar.AM_PM ,1);
        boolean call = Calendar.getInstance().after(cal);
        boolean cc = Calendar.getInstance().before(cal);
        
        String Status ="Present";
            String Enterid = IDField.getText();
        
        if(Enterid.equals("")){
            
             reason.setText("  Please Enter ID ");
                    reason.setForeground(Color.red);
                    reason.setVisible(true);
                    Solo();
              IDField.requestFocus(true);
            return;
        }

        if(Past){ //Before Eight
            
          st= conn.createStatement();
                String sql2 = "Select TimeIN from nnsignin  where TempID ='"+Enterid+"'  and DayofYear='"+Dayofyear+"' ";  //checks if the ID Exists  in the Database
                rs=st.executeQuery(sql2);
                  while(rs.next()){
                     reason.setText(" You Already Signed IN ");
                    reason.setForeground(Color.red);
                    reason.setVisible(true);
                    Solo();
                     IDField.setText("");
                    IDField.requestFocus(true);
                    return;
                  }
         
         try {
                
               
                String sql1 = "Select ID from nn  where ID ='"+Enterid+"' ";  //checks if the ID Exists  in the Database
                rs=st.executeQuery(sql1);   
              if(rs.next()){

                String add ="insert into nnsignin  (TimeIN,Status,DayOfYear, Date, TempID) values(?,?,?,?,?) ";
                  PreparedStatement pst = conn.prepareStatement(add);

            pst.setString(1, ts);
            //pst.setBlob(2, fis);
            
            pst.setString(2, "Present" );
            pst.setString(3, dayofyear);
            pst.setString(4, date);
            pst.setString(5, IDField.getText());
            
                pst.execute();
                 
                rs = st.executeQuery("select FirstName,LastName,image from nn where id ='"+Enterid+"' ");
                       while(rs.next()){
                    
                    reason.setText(" You Are Welcome , Please Go In ");
                    reason.setForeground(Color.BLUE);
                    reason.setVisible(true);
                    
                    Name = rs.getString("FirstName");
                    String LName = rs.getString("LastName");
                    
                    String g1  = Name + " " + LName;
                    b = rs.getBytes("image");
                    picturelabel.setIcon(ResizeImage(b));
                    Area.append(g1+ "\n");
                    
                    Solo();
                    IDField.setText("");
                    IDField.requestFocus(true);
                    
                     }//End While
 
                }
             else{
      
                     reason.setText(" Record doesnt Exist ");                 
                    reason.setForeground(Color.red);
                    reason.setVisible(true);
                    Solo();
                   IDField.setText("");
                    IDField.requestFocus(true);

                        }

                 
           rs.close();
       st.close(); 
              
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, " " +ex);
            }
               
        }
       
                    } catch (ClassNotFoundException | SQLException | IOException  | IllegalAccessException | InstantiationException ex) {
                        JOptionPane.showMessageDialog(null, " " +ex);
                     
                        } 
  
                        finally{
                         if(conn != null){
                             try {
                                 conn.close();
                             } catch (SQLException ex) {
                                  JOptionPane.showMessageDialog(this, " " +ex);
                             }

                         }
                        }

    }//GEN-LAST:event_ResumebuttonMouseClicked

    private void IDFieldInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_IDFieldInputMethodTextChanged

    }//GEN-LAST:event_IDFieldInputMethodTextChanged

    private void Savereason_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Savereason_buttonActionPerformed

    }//GEN-LAST:event_Savereason_buttonActionPerformed

    private void Savereason_buttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Savereason_buttonMouseClicked
             
        
        if(latereasoncombo.getSelectedItem().equals("Select Reason For Lateness....")){
             IDField.requestFocus(true);
            JOptionPane.showMessageDialog(this, " Select A Valid Reason!","Error",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        try {

            String Enterid = IDField.getText();
            
            conn = SqlConnect2.AttconDB();
            st = conn.createStatement();
            String RFT = "update  nnsignin  set ReasonForLateness ='"+latereasoncombo.getSelectedItem()+"' where TempID = '"+ Enterid+"' and DayOfYear='"+Dayofyear+"' ";
            st.executeUpdate(RFT);
            

                    reason.setText("You Can now go in");                 
                    reason.setForeground(Color.red);
                    reason.setVisible(true);
                     Solo();
                    Area.append(" " +g1+ "\n ");
                    getname.setText("");
                 
                latereasoncombo.setSelectedIndex(0);
              latereasoncombo.setEnabled(false);
            Savereason_button.setEnabled(false);
            IDField.setEditable(true);
      Resumebutton.setEnabled(true);
      IDField.setText("");
           IDField.requestFocus();
           
           
        } catch (SQLException |IOException | ClassNotFoundException | IllegalAccessException | InstantiationException ex) {
            JOptionPane.showMessageDialog(this, ex);
        } finally{
            
                try {
                    
                    st.close();
                    conn.close();
                } catch (SQLException ex) {
                     JOptionPane.showMessageDialog(this, " " +ex);
                }
            }
    }//GEN-LAST:event_Savereason_buttonMouseClicked

    private void IDFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDFieldKeyPressed
     
    }//GEN-LAST:event_IDFieldKeyPressed

    private void IDFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_IDFieldKeyTyped
          char c = evt.getKeyChar();
        if (!(Character.isDigit(c)|| (c== KeyEvent.VK_BACK_SPACE)||(c==KeyEvent.VK_DELETE))){
          evt.consume();
        }
    }//GEN-LAST:event_IDFieldKeyTyped

    private void IDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDFieldActionPerformed
        
    }//GEN-LAST:event_IDFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

            
         try {
             Attendance_Record Ar = new Attendance_Record(null, true);
             Ar.setVisible(true);
         } catch (SQLException | ClassNotFoundException | IllegalAccessException | InstantiationException | IOException ex) {
             Logger.getLogger(Attendance_System.class.getName()).log(Level.SEVERE, null, ex);
         }
             
             
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Main ATTENDANCESYSTEM = new Main(null,false);
        ATTENDANCESYSTEM.setVisible(true);
    }//GEN-LAST:event_formWindowClosing
       Calendar o = Calendar.getInstance(Locale.US);
       int Dayofyear = o.get(Calendar.DAY_OF_YEAR);
       String dayofyear = String.valueOf(Dayofyear);
       int n = o.get(Calendar.AM_PM);
       
        
       
         LocalDateTime m = LocalDateTime.now();
       int h =   m.getDayOfMonth();
         int h1 = m.getMonthOfYear();
          int h2 = m.getYear();
          String Date =String.valueOf(h+"/"+h1+"/"+h2);
          
          
//          Locale locale = Locale.ENGLISH;
//DateTimeFormatter formatterOutput = DateTimeFormat.forPattern( "E" ).withLocale( locale );
//          String output = formatterOutput.print( m);
          String date = Date ;
            
      
   SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:ss a");
    String ts = sdf.format(new  Date());
        
          public void Show(){
          
                reason.setText("");
                    reason.setVisible(false);
                    ResetImage();
          }
          
          public void Solo(){
            timer = new Timer(1700, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
               
                if(chromeShown) {
                    Show();
                    chromeShown = false;
                } else {
                    Show();
                    chromeShown = true;
                }
            }
        });
        
            timer.setRepeats(false); 
            timer.start();
            
          }
          
        

    
          
           
    
          
          
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance_System.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Attendance_System().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Area;
    private javax.swing.JTextField IDField;
    private javax.swing.JTextArea OutArea;
    private javax.swing.JButton Resumebutton;
    private javax.swing.JButton Savereason_button;
    public static javax.swing.JLabel clocklabel;
    private javax.swing.JLabel getname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox latereasoncombo;
    private javax.swing.JLabel picturelabel;
    private javax.swing.JLabel reason;
    // End of variables declaration//GEN-END:variables


   public final void  ResetImage(){
      picturelabel.setIcon((ResizeImage("src/res/wImg0.jpg")));
  
   
    }
      public  ImageIcon ResizeImage(String ImagePath)
    {
        ImageIcon MyImage = new ImageIcon(ImagePath);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(picturelabel.getWidth(),picturelabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
      
    }
       public  ImageIcon ResizeImage(byte b[])
    {
        ImageIcon MyImage = new ImageIcon(b);
        Image img = MyImage.getImage();
        Image newImg = img.getScaledInstance(picturelabel.getWidth(),picturelabel.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
      
    }
}
